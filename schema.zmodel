generator client {
  provider = "prisma-client-js"
}

generator nexusPrisma {
  provider = "nexus-prisma"
}

datasource db {
  provider = "mysql" // Atau "mysql", sesuaikan dengan kebutuhan
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  uuid       String     @unique @default(uuid())
  name       String
  username   String     @unique @length(min: 3)
  identity   String     @unique
  email      String     @unique @email('must be a valid email')
  password   String     @password @length(min: 8)
  roles      Role[]     @relation("UserRole")
  roleUnits  RoleUnit[]
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt

  @@allow('all', auth().roles?[name == 'system'])
  @@allow('read', true)
  @@allow('update', auth().roles?[name == 'system'] || this == auth())
}

model Role {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  description String?
  users       User[]       @relation("UserRole")
  permissions Permission[] @relation("RolePermission")
  roleUnits   RoleUnit[]
  created_at  DateTime     @default(now())
  updated_at  DateTime     @updatedAt

  @@allow('all', false)
  @@allow('read', true)
}

model Permission {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  roles       Role[]   @relation("RolePermission")
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  @@allow('all', false)
  @@allow('read', true)
}

model Unit {
  id          Int        @id @default(autoincrement())
  codename    String     @unique
  name        String     @unique
  description String?
  roleUnits   RoleUnit[]
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt

  @@allow('all', false)
  @@allow('read', true)
}

model RoleUnit {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [user_id], references: [id])
  user_id    Int
  unit       Unit     @relation(fields: [unit_id], references: [id])
  unit_id    Int
  role       Role     @relation(fields: [role_id], references: [id])
  role_id    Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@unique([user_id, role_id, unit_id]) // Compound unique constraint
  @@allow('all', auth().roles?[name == 'system'])
  @@allow('read', true)
}
